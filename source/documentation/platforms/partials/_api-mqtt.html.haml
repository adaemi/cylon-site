%section.how-to
  :markdown
    ## How to Install

        :::bash
        $ npm install cylon-api-mqtt

    ## How to Use

    Make sure you have Cylon.js installed, then we can add MQTT support to cylon
    programs as follows:

        :::javascript
        'use strict';

        var Cylon = require('cylon');

        Cylon.robot({
          name: 'cybot',

          connections: {
            arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' }
          },

          devices: {
            led: { driver: 'led', pin: 13 }
          },

          work: function() {
            // Add your robot code here,
            // for this simple blink example
            // we'll interacting with the
            // robot through the 'led' device.
          }
        });

        // ensure you install the API plugin first:
        // $ npm install cylon-api-mqtt
        Cylon.api(
          'mqtt',
          {
          broker: 'mqtt://test.mosquitto.org',
          port: '3000'
        });

        Cylon.start();
    ## How to Connect

    Once you have added the api to your Cylon.js code, and your robots are up and running, you can communicate with it using the MQTT broker.

    You send commands to the robot by publishing MQTT messages to the broker intended for that robot using an MQTT topic matching the CPPP.IO (http://cppp.io) based route.

    You subscribe to events from that robot, again by using the correct MQTT topic matching the CPPP.IO (http://cppp.io) based route.

        :::javascript
        'use strict';

        var mqtt    = require('mqtt');
        var client  = mqtt.connect('mqtt://test.mosquitto.org');

        client.on('message', function (topic, payload) {
          var data, sender;

          if (!!payload && (payload.length > 0)) {
            data = JSON.parse(payload);
            sender = data.sender;
          }

          if (sender !== 'self') {
            console.log('Topic name ==>', topic);
            console.log('Payload ==>', data);
          }
        });

        var params = {
          sender: 'self',
          args: ['param1', 'param2', 'param3']
        };

        // Payload needs to be a JSON string
        var payload = JSON.stringify(params);

        // get response messages from the robot-level command `toggle`
        client.subscribe('/api/robots/cybot/commands/toggle');

        setInterval(function() {
          // call robot-level command `toggle`
          client.publish(
            '/api/robots/cybot/commands/toggle',
            payload);
        }, 2000);
    You can also send commands or subscribe to events directly on any robot's devices. Take a look at the examples folder for more samples.
