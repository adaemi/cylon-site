:markdown
  ## goToRGB

  Sets the color of the BlinkM to the specified combination of RGB values.


  ### Params


  - **r** (<code>Number</code>) red value, 0-255


  - **g** (<code>Number</code>) green value, 0-255


  - **b** (<code>Number</code>) blue value, 0-255


  - **callback** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## fadeToRGB

  Fades the color of the BlinkM to the specified combination of RGB values.


  ### Params


  - **r** (<code>Number</code>) red value, 0-255


  - **g** (<code>Number</code>) green value, 0-255


  - **b** (<code>Number</code>) blue value, 0-255


  - **callback** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## fadeToHSB

  Fades the color of the BlinkM to the specified combination of HSB values.


  ### Params


  - **h** (<code>Number</code>) hue value, 0-359


  - **s** (<code>Number</code>) saturation value, 0-100


  - **b** (<code>Number</code>) brightness value, 0-100


  - **callback** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## fadeToRandomRGB

  Fades the color of the BlinkM to a random combination of RGB values.


  ### Params


  - **r** (<code>Number</code>) red value, 0-255


  - **g** (<code>Number</code>) green value, 0-255


  - **b** (<code>Number</code>) blue value, 0-255


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## fadeToRandomHSB

  Fades the color of the BlinkM to a random combination of HSB values.


  ### Params


  - **h** (<code>Number</code>) hue value, 0-359


  - **s** (<code>Number</code>) saturation value, 0-100


  - **b** (<code>Number</code>) brightness value, 0-100


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## playLightScript

  Plays a light script for the BlinkM.

  Available scripts are available in the BlinkM datasheet.

  A `repeats` value of `0` causes the script to execute until the the
  `#stopScript` command is called.


  ### Params


  - **id** (<code>Number</code>) light script to play


  - **repeats** (<code>Number</code>) whether the script should repeat


  - **startAtLine** (<code>Number</code>) which line in the light script to start at


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## stopScript

  Stops the currently executing BlinkM light script.


  ### Params


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## setFadeSpeed

  Sets the fade speed for the BlinkM


  ### Params


  - **speed** (<code>Number</code>) how fast colors should fade (1-255)


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## setTimeAdjust

  Sets a time adjust for the BlinkM.

  This affects the duration of scripts.


  ### Params


  - **time** (<code>Number</code>) an integer between -128 and 127. 0 resets the time.


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## getRGBColor

  Gets the RGB values for the current BlinkM color.

  Yields an array in the form `[r, g, b]`, each a 0-255 integer.


  ### Params


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## getAddress

  Returns a string describing the current I2C address being used.


  ### Params


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## setAddress

  Sets an address to the BlinkM driver


  ### Params


  - **address** (<code>Number</code>) I2C address to set


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## getFirmware

  Returns a string describing the I2C firmware version being used


  ### Params


  - **cb** (<code>Function</code>) function to invoke when complete


  ### Returns

  - (<code>undefined</code>)
