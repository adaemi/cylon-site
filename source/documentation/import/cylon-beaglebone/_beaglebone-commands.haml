:markdown
  ## analogRead

  Reads values from an analog pin on the board.

  When values are read from the pin, emits then as (err, val) to the provided
  callback.

  Also emits values through the "analogRead" event.


  ### Params


  - **pinNum** (<code>Number</code>) the analog pin to read from


  - **callback** (<code>Function</code>) a function to be triggered when a value is read


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## digitalRead

  Reads values from a digital pin on the board.

  When values are read from the pin, emits then as (err, val) to the provided
  callback.

  Also emits values through the "digitalRead" event.


  ### Params


  - **pinNum** (<code>Number</code>) the digital pin to read from


  - **callback** (<code>Function</code>) a function to be triggered when a value is read


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## digitalWrite

  Writes a value to a digital pin on the board.


  ### Params


  - **pinNum** (<code>Number</code>) the digital pin to write to


  - **value** (<code>Number</code>) the value to be written to the pin


  - **[callback]** (<code>Function</code>) - (err, val) triggers when write is complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## pwmWrite

  Writes a PWM value to a pin on the board.


  ### Params


  - **pin** (<code>Number</code>) the pin to write to


  - **scaledDuty** (<code>Number</code>) the scaled PWM duty to use


  - **freq** (<code>Number</code>) the frequency to use


  - **pw** (<code>Number</code>) the pulse width to use


  - **event** (<code>String</code>) event name prefix


  - **[cb]** (<code>Function</code>) - (err, val) triggers when write is complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## servoWrite

  Writes a Servo value to a pin on the board.


  ### Params


  - **pin** (<code>Number</code>) the pin to write to


  - **scaledDuty** (<code>Number</code>) the scaled PWM duty to use


  - **freq** (<code>Number</code>) the frequency to use


  - **pw** (<code>Number</code>) the pulse width to use


  - **[cb]** (<code>Function</code>) - (err, val) triggers when write is complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## i2cWrite

  Writes an I2C value to the board.


  ### Params


  - **address** (<code>Number</code>) I2C address to write to


  - **cmd** (<code>Number</code>) I2C command to write


  - **buff** (<code>Array</code>) buffered data to write


  - **[callback]** (<code>Function</code>) - (err, val) triggers when write is complete


  ### Returns

  - (<code>undefined</code>)

  * * *

  ## i2cRead

  Reads an I2C value from the board.


  ### Params


  - **address** (<code>Number</code>) I2C address to write to


  - **cmd** (<code>Number</code>) I2C command to write


  - **length** (<code>Number</code>) amount of data to read


  - **callback** (<code>Function</code>) (err, val) function to trigger with value


  ### Returns

  - (<code>undefined</code>)
